import React, { useState } from 'react';
import { Card, Button, Input, Alert } from '@/components/ui';
import { showNotification } from '@/components/ui';

interface ExaminationRecord {
  id: string;
  date: string;
  doctor: string;
  symptoms: string;
  diagnosis: string;
  treatment: string;
  notes: string;
}

const PatientInitialExamination = () => {
  const [isAdding, setIsAdding] = useState(false);
  const [isLoading, setIsLoading] = useState(false);

  // Mock data - in real app, this would come from API
  const [examinations, setExaminations] = useState<ExaminationRecord[]>([
    {
      id: '1',
      date: '2024-01-15',
      doctor: 'BS. Nguy·ªÖn VƒÉn A',
      symptoms: 'ƒêau rƒÉng h√†m tr√™n b√™n ph·∫£i, s∆∞ng n∆∞·ªõu',
      diagnosis: 'Vi√™m n∆∞·ªõu c·∫•p t√≠nh',
      treatment: 'L√†m s·∫°ch rƒÉng, k√™ ƒë∆°n thu·ªëc kh√°ng vi√™m',
      notes: 'B·ªánh nh√¢n c·∫ßn v·ªá sinh rƒÉng mi·ªáng t·ªët h∆°n'
    },
    {
      id: '2',
      date: '2024-01-20',
      doctor: 'BS. Tr·∫ßn Th·ªã B',
      symptoms: 'ƒêau rƒÉng h√†m d∆∞·ªõi b√™n tr√°i',
      diagnosis: 'S√¢u rƒÉng giai ƒëo·∫°n 2',
      treatment: 'Tr√°m rƒÉng composite',
      notes: 'C·∫ßn theo d√µi v√† t√°i kh√°m sau 1 tu·∫ßn'
    }
  ]);

  const handleAddExamination = async () => {
    setIsLoading(true);
    try {
      // Simulate API call
      await new Promise(resolve => setTimeout(resolve, 1000));
      showNotification.success('Th√™m h·ªì s∆° kh√°m th√†nh c√¥ng!');
      setIsAdding(false);
    } catch (error) {
      showNotification.error('C√≥ l·ªói x·∫£y ra khi th√™m h·ªì s∆°');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-6">
            <div>
              <h1 className="text-3xl font-bold text-gray-900">H·ªì s∆° kh√°m ban ƒë·∫ßu</h1>
              <p className="text-gray-600 mt-1">
                L·ªãch s·ª≠ kh√°m b·ªánh v√† ch·∫©n ƒëo√°n ban ƒë·∫ßu
              </p>
            </div>
            <div className="flex space-x-3">
              <Button 
                onClick={() => setIsAdding(true)} 
                variant="primary"
              >
                Th√™m h·ªì s∆° kh√°m
              </Button>
            </div>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Summary Cards */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <Card className="p-6">
            <div className="flex items-center">
              <div className="p-2 bg-blue-100 rounded-lg">
                <span className="text-2xl">üìã</span>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-500">T·ªïng s·ªë l·∫ßn kh√°m</p>
                <p className="text-2xl font-bold text-gray-900">{examinations.length}</p>
              </div>
            </div>
          </Card>
          
          <Card className="p-6">
            <div className="flex items-center">
              <div className="p-2 bg-green-100 rounded-lg">
                <span className="text-2xl">üë®‚Äç‚öïÔ∏è</span>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-500">B√°c sƒ© ƒë√£ kh√°m</p>
                <p className="text-2xl font-bold text-gray-900">2</p>
              </div>
            </div>
          </Card>
          
          <Card className="p-6">
            <div className="flex items-center">
              <div className="p-2 bg-orange-100 rounded-lg">
                <span className="text-2xl">üìÖ</span>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-500">L·∫ßn kh√°m g·∫ßn nh·∫•t</p>
                <p className="text-lg font-bold text-gray-900">20/01/2024</p>
              </div>
            </div>
          </Card>
        </div>

        {/* Examination Records */}
        <div className="space-y-6">
          {examinations.map((examination) => (
            <Card key={examination.id} className="p-6">
              <div className="flex justify-between items-start mb-4">
                <div>
                  <h3 className="text-lg font-semibold text-gray-900">
                    L·∫ßn kh√°m ng√†y {examination.date}
                  </h3>
                  <p className="text-gray-600">B√°c sƒ©: {examination.doctor}</p>
                </div>
                <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                  Ho√†n th√†nh
                </span>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h4 className="font-medium text-gray-900 mb-2">Tri·ªáu ch·ª©ng</h4>
                  <p className="text-gray-700 text-sm">{examination.symptoms}</p>
                </div>

                <div>
                  <h4 className="font-medium text-gray-900 mb-2">Ch·∫©n ƒëo√°n</h4>
                  <p className="text-gray-700 text-sm">{examination.diagnosis}</p>
                </div>

                <div>
                  <h4 className="font-medium text-gray-900 mb-2">ƒêi·ªÅu tr·ªã</h4>
                  <p className="text-gray-700 text-sm">{examination.treatment}</p>
                </div>

                <div>
                  <h4 className="font-medium text-gray-900 mb-2">Ghi ch√∫</h4>
                  <p className="text-gray-700 text-sm">{examination.notes}</p>
                </div>
              </div>

              <div className="mt-4 pt-4 border-t border-gray-200">
                <div className="flex justify-end space-x-3">
                  <Button variant="outline" size="sm">
                    Xem chi ti·∫øt
                  </Button>
                  <Button variant="primary" size="sm">
                    T·∫£i xu·ªëng
                  </Button>
                </div>
              </div>
            </Card>
          ))}
        </div>

        {/* Add New Examination Modal */}
        {isAdding && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <Card className="w-full max-w-2xl max-h-[90vh] overflow-y-auto">
              <div className="p-6">
                <div className="flex justify-between items-center mb-6">
                  <h3 className="text-lg font-semibold text-gray-900">
                    Th√™m h·ªì s∆° kh√°m m·ªõi
                  </h3>
                  <button
                    onClick={() => setIsAdding(false)}
                    className="text-gray-400 hover:text-gray-600"
                  >
                    <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                    </svg>
                  </button>
                </div>

                <form className="space-y-4">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        Ng√†y kh√°m
                      </label>
                      <Input type="date" />
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        B√°c sƒ© kh√°m
                      </label>
                      <Input placeholder="T√™n b√°c sƒ©" />
                    </div>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Tri·ªáu ch·ª©ng
                    </label>
                    <textarea
                      rows={3}
                      className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                      placeholder="M√¥ t·∫£ tri·ªáu ch·ª©ng..."
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Ch·∫©n ƒëo√°n
                    </label>
                    <textarea
                      rows={3}
                      className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                      placeholder="Ch·∫©n ƒëo√°n c·ªßa b√°c sƒ©..."
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Ph∆∞∆°ng ph√°p ƒëi·ªÅu tr·ªã
                    </label>
                    <textarea
                      rows={3}
                      className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                      placeholder="Ph∆∞∆°ng ph√°p ƒëi·ªÅu tr·ªã..."
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Ghi ch√∫
                    </label>
                    <textarea
                      rows={3}
                      className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                      placeholder="Ghi ch√∫ th√™m..."
                    />
                  </div>

                  <div className="flex justify-end space-x-3 pt-4">
                    <Button 
                      onClick={() => setIsAdding(false)} 
                      variant="outline"
                    >
                      H·ªßy
                    </Button>
                    <Button 
                      onClick={handleAddExamination}
                      variant="primary"
                      loading={isLoading}
                    >
                      L∆∞u h·ªì s∆°
                    </Button>
                  </div>
                </form>
              </div>
            </Card>
          </div>
        )}
      </div>
    </div>
  );
};

export default PatientInitialExamination;
